generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

// start trello-clone schema

model Board {
  id                  String @id @default(cuid())
  orgId               String
  title               String
  imageId             String
  imageThumbUrl       String
  imageFullUrl        String
  imageUserName       String
  imageLinkHtml       String
  imageAltDescription String
  Lists               List[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model List {
  id      String @id @default(cuid())
  boardId String
  title   String
  order   Int
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cards     Card[]

  @@index([boardId])
}

model Card {
  id          String  @id @default(cuid())
  listId      String
  title       String
  order       Int
  description String?
  list        List    @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listId])
}

enum Action {
  CREATE
  UPDATE
  DELETE
  REORDER
  COPY
}

enum EntityType {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id          String     @id @default(cuid())
  userId      String
  userImage   String
  userName    String
  orgId       String
  action      Action
  entityId    String
  entityType  EntityType
  entityTitle String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model OrgLimit {
  id    String @id @default(uuid())
  orgId String @unique
  count Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgSubscription {
  id    String @id @default(uuid())
  orgId String @unique

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

// end trello-clone schema
